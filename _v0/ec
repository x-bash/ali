# shellcheck shell=sh disable=SC3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

ali_ec(){
    param <<A
subcommand:
    ls                  "list"
    quick               "quick"
    start               "start instance"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_ec_quick "$@"
        return
    fi

    "ali_ec_$PARAM_SUBCMD" "$@"
}

ali_ec_quick(){
    ali_ec_ls_pretty "$@"
}

ali_ec_ls_pretty(){
    ali_ec_ls "$@" | jq '
    .[] | { 
        osname: .OSNameEn,
        cpu: .Cpu,
        memory: .Memory,
        hostname: .HostName,
        image: .ImageId,
        ip: .EipAddress.IpAddress,
        zone: .ZoneId,
        start: .StartTime,
        status: .Status,
        id: .InstanceId
    }
' | jq -s .

}

# shellcheck disable=SC2120
ali_ec_ls(){
    case $# in
        0)  aliyun ecs DescribeInstances | jq .Instances.Instance
            ;;
        *)  ali_ec_ls | jq .[] | _ali_ec_filter "${1:-Provide regex pattern}" | jq -s .
            ;;
    esac
}

ali_ec_exact_id(){
    local s
    s="$(ali_ec_ls "${1:-Provide ip}")"
    local len
    len="$(echo "$s" | jq ' . | length ')"
    case $len in
        0)  ali_log warn "No such ec server found.";;
        1)  echo "$s" | jq -r .[0].InstanceId
            return 0
            ;;
        *)  ali_log warn "Multiple ec server found.";;
    esac
    return 1
}

_ali_get_dns(){
    # Using dig/nslookup is much better for icmp might be disable.
    ping -W 0.01 -c 1 "${1:-hostname}" 2>/dev/null | awk 'NR==1 {
        match( $3, /\([0-9.]+\)/ )
        if (RLENGTH > 0) print substr($3, 2, RLENGTH - 2)
        else    exit 1
}'
}

ali_ec_new(){
    local s
    s=$(ali_ec_ls)    
    local len
    len=$(echo "$s" | jq -s '. | length')
    case "$len" in
        0)  return 1        ;;
        1)  echo "$s"       ;;
        *)  echo "$s"       ;;
    esac

    return 0
}

_ali_ec_filter(){
    local pattern="${1:?Provide pattern}"
    local s
    s="$(cat)"

    local res
    res="$(jq "
        if .EipAddress.IpAddress | test(\"${pattern}\")  then . 
        elif .HostName | test(\"$pattern\") then . 
        elif .InstanceName | test(\"$pattern\") then . 
        else empty end
    " <<A
$s
A
)"

    # Using dig for DNS
    local len
    len=$(echo "$res" | jq -s '. | length')

    if [ "$len" != 0 ]; then
        echo "$res"
        return 0
    fi

    

    local ip
    if ip=$(_ali_get_dns "$pattern"); then
        jq "
    if .EipAddress.IpAddress == \"${ip}\"  then .
    else empty end
" <<A
$s
A
        :
    fi

}

ali_ec_op(){
    local subcmd="${1:?subcmd}"
    case "$subcmd" in
        start)          ;;
        info)           ;;
        stop)           ;;
        restart)        ;;
    esac
}


ali_ec_regions(){
    aliyun ecs DescribeRegions | jq .Regions.Region
}

ali_ec_start(){
    local id
    if id="$(ali_ec_exact_id "$@")"; then
        ali_log info "Instance ID: $id"
        aliyun ecs StartInstance --InstanceId "$id"
    fi
}


# aliyun ecs new-auto

# aliyun ecs new 47.242.182.73 abc
# aliyun ecs new a.lteam.top abc
# aliyun ecs host

# abc start
# abc stop
# abc info

# check hostname
# check ip
# check dns name
# check
ali_ec_new(){
    aliyun ecs
}

