# shellcheck shell=sh disable=SC3043

# elastics ip

ali_eip(){
    param <<A
subcommand:
    allocate|+          "handle_domains"
    release|-           "handling record"
    associate           "associate the ip to the instance"
    unassociate         "unassociate the ip to the instance"
    ls                  "list"
    quick               "quick"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_eip_quick "$@"
        return
    fi

    "ali_eip_$PARAM_SUBCMD" "$@"
}


ali_eip_allocate(){
    param <<A
options:
    --bandwidth|-b          "Provide bandwidth"     <bandwidth>=5
    --pay_by_bandwidth      "If set, paid by bandwdith. Otherwise, paid by traffic"
    --bgp_pro               "Only for Hongkong Region"
A

    local args=""
    [ -n "$pay_by_bandwidth" ] && args="$args --InternetChargeType PayByBandwidth"
    [ -n "$bgp_pro" ] && args="$args --ISP BGP_PRO"

    eval aliyun ecs AllocateEipAddress --Bandwidth "${bandwidth}" "$args"
}

ali_eip_ls_format(){
    ali_table_json \
        ip=.IpAddress bw=.Bandwidth charge=.ChargeType time=.AllocationTime \
        insId=.InstanceId insCharge=.InternetChargeType
}

# shellcheck disable=SC2120
ali_eip_ls(){
    case $# in
        0)  aliyun ecs DescribeEipAddresses | jq .EipAddresses.EipAddress
            ;;
        *)  local regex="${1:-Provide regex pattern}"
            ali_eip_ls | jq -r "
                .[] | 
                if .IpAddress | test(\"$regex\")      then .
                elif .AllocationId | test(\"$regex\")      then .
                else empty end
            " | jq -s .
            ;;
    esac | {
        if [ -t 1 ]; then
            ali_eip_ls_format
        else
            cat
        fi
    }
}

ali_eip_exact_id(){
    local s
    s="$(ali_eip_ls "${1:-Provide ip}")"
    local len
    len="$(echo "$s" | jq ' . | length ')"
    case $len in
        0)  ali_log warn "No such ip found."
            ;;
        1)  echo "$s" | jq -r .[0].AllocationId
            return 0
            ;;
        *)  ali_log warn "Multiple ip found."
            ;;
    esac
    return 1
}

ali_eip_release(){
    local id
    if id="$(ali_eip_exact_id "$@")"; then
        ali_log info "Allocation ID: $id"
        aliyun ecs ReleaseEipAddress --AllocationId "$id"
    fi
}

ali_eip_associate(){
    local eip_id
    local ecs_id

    if eip_id="$(ali_eip_exact_id "${1:?Provide eip keyword}")" && \
        ecs_id="$(ali_ecs_exact_id "${2:?Provide ecs keyword}")"
    then
        aliyun ecs AssociateEipAddress "$eip_id" "$ecs_id"
    fi
}

# Very wired design.
# I think, only ip should be provided.
ali_eip_unassociate(){
    local eip_id
    local ecs_id

    if eip_id="$(ali_eip_exact_id "${1:?Provide eip keyword}")" && \
        ecs_id="$(ali_ecs_exact_id "${2:?Provide ecs keyword}")"
    then
        aliyun ecs UnasssociateEipAddress "$eip_id" "$ecs_id"
    fi
}


_ali_eip_quick_title(){
    s=$(ali_eip_ls)
    printf "%s" "$s" | ali_eip_ls_format

    cat <<A

Commands:
  +|allocate        Format: allocate [ -b bandwidth ] [ --pay_by_bandwidth ] [ --bgp_pro ]
  -|release         Format: release <ip or allocation id>
  r                 reload
  q                 quit

A
}

ali_eip_quick(){
    # case "$1" in
    #     +*) ali_eip_allocate "${1#+}"
    #         ;;
    #     -*) ali_eip_allocate "${1#-}"      
    #         ;;
    #     *)   
    #         ali_eip_ls "$@"   
    #         ;;
    # esac

    local s
    
    if [ ! -t 1 ]; then
        s=$(ali_eip_ls)
        printf "%s\n" "$s"
        return
    fi

    _ali_eip_quick_title

    local line
    while printf "> " && ali_read line; do
        eval set -- "$line"
        local cmd=$1;   shift
        case "$cmd" in
            +|allocate)
                ali_eip_allocate "$@"
                _ali_eip_quick_title
                ;;
            -|release)
                ali_eip_release "$@"
                _ali_eip_quick_title
                ;;
            r)  
                _ali_eip_quick_title
                ;;
            q)  break 
                ;;
            "") ;;
            *)  ali eip "$@"
        esac
    done


}

