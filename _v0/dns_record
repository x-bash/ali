# shellcheck shell=sh disable=SC3043

ali_dns_record(){
    param <<A
subcommand:
    ls          "list all records"
    put         "put record"
    add         "add record"
    del         "del record"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_dns_record_quick "$@"
        return
    fi

    ali_dns_record_"$PARAM_SUBCMD" "$@"
}

ali_dns_record_add(){
    param <<A
options:
    #1              "Domain Name. If you want to setup 'xxx.domain.com', please input 'domain.com'"             <DomainName>    =~ [^\.]\.[^\.]
    #2              "RR. If you want to setup 'xxx.domain.com', please input 'xxx'"                             <RR>
    #3              "Valuem like IP, or txt name"                                                               <Value>
    #4              "record type, if not provided, type default is A when value is an ip, otherwise cname"      <Type>=A       =~  A   TXT
A

    local DomainName=${1}
    local RR=${2}
    local Value=${3}
    local Type=${4}
    if [ -z "$Type" ]; then
        if ali_is_ip "$Value"; then
            Type="A"
        else
            Type="CNAME"
        fi
    fi

    aliyun alidns AddDomainRecord \
        --DomainName "$DomainName" \
        --RR "$RR" \
        --Type "$Type" \
        --Value "$Value"
}

ali_dns_record_ls_format(){
    ali_table_json \
        .RecordId .Status .DomainName .RR .Type .Value .Weight  # .Line .Locked
}

ali_dns_record_ls(){
    if [ ! -t 1 ]; then
        _ali_dns_record_ls "$@"
    else
        _ali_dns_record_ls "$@" | ali_dns_record_ls_format
    fi
}

_ali_dns_record_ls(){
    case $# in
        0)  ali dns domain ls | jq -r .[].DomainName | while read -r line; do
                _ali_dns_record_ls "$line"
            done
            ;;
        1)  local name=${1}
            local rr=${name%.*.*}
            local domain=${name#${rr}.}
            if [ "$rr" = "$name" ]; then
                ccmd 5m -- aliyun alidns DescribeDomainRecords --DomainName "$name" | jq -r '.DomainRecords.Record'
            else
                _ali_dns_record_ls "$domain" "^$rr$"
            fi
            ;;
        *)  local regex="${2:-Provide regex pattern}"
            echo ::: _ali_dns_record_ls "${1:?Provide domain name}" >&2
            _ali_dns_record_ls "${1:?Provide domain name}" | jq -r "
                .[] | 
                if .RR | test(\"$regex\")           then .
                elif .Value | test(\"$regex\")      then .
                elif .RecordId | test(\"$regex\")   then .
                else empty end
            " | jq -s .
            ;;
    esac    
}

ali_exactor_declare ali_dns_record \
    "No such ip found." \
    "Multiple ip found." \
    RecordId

ali_dns_record_update(){
    local RecordId=${1:?"Provide RecordId"}
    local RR=${2:?"Provide RR"}
    local Type=${3:?"Provide Type"}
    local Value=${4:?"Provide Work"}
    aliyun alidns UpdateDomainRecord \
        --RecordId "$RecordId" \
        --RR "$RR" \
        --Type "$Type" \
        --Value "$Value"
}

ali_dns_record_del(){
    if [ "$#" -eq 1 ]; then
        case "$1" in
            *\.*)
                local name=${1}
                local rr=${name%.*.*}
                local domain=${name#${rr}.}
                ali_dns_record_del "$domain" "$rr"
                ;;
            *) 
                if aliyun alidns DeleteDomainRecord --RecordId "$1"; then
                    ali_log info "ali_dns_record_del success."
                fi
                ;;
        esac
    else
        local DomainName=${1:?"Domain Name"}
        local RR=${2:?"Provide RR"}
        local RID
        RID=$(ali_dns_record_exact_id "$DomainName" "$RR") && \
        if aliyun alidns DeleteDomainRecord --RecordId "$RID"; then
            ali_log info "ali_dns_record_del success."
        fi
    fi
    
}

ali_dns_record_put(){
    if [ $# = 2 ]; then
        local name=${1}
        local rr=${name%.*.*}
        local domain=${name#${rr}.}

        local rec=${2}
        if ali_is_ip "$rec"; then
            _ali_dns_record_put "$domain" "$rr" A "$rec"
            return 0
        else
            :
            # TODO: Maybe using other method.
            return 1
        fi
    fi

    _ali_dns_record_put "$@"
    return
}

_ali_dns_record_put(){
    local DomainName=${1:?"Domain Name"}
    local RR=${2:?"Provide RR"}
    local Type=${3:?"Provide Type"}
    local Value=${4:?"Provide IP"}

    local item
    item="$(_ali_dns_record_ls "$DomainName" "^$RR$")"
    local len
    len="$(printf "%s" "$item" | jq '. | length' 2>/dev/null)"

    if [ "$len" -eq 0 ]; then
        ali_log info "Add New Record\n: $DomainName $RR $Type $Value"
        ali_dns_record_add "$DomainName" "$RR" "$Type" "$Value"
    elif [ "$len" -eq 1 ]; then
        local v
        v=$(printf "%s" "$item" | jq -r .[0].Value)
        if [ "$Value" = "$v" ]; then
            ali_log warn "Item already existed."
        else
            RID=$(printf "%s" "$item" | jq -r .[0].RecordId)
            ali_log info "Already Register. Try to update: $RID $RR $Type $Value"
            ali_dns_record_update "$RID" "$RR" "$Type" "$Value"
        fi
    else
        ali_log error "Found More than 1 item."
        return 1
    fi
}

ali_dns_record_quick(){
    if [ "$#" -eq 0 ]; then
        ali_log warn "Please provide keyword"
        return 1
    fi

    ps1env init "ali dns record>"
    ps1env alias + "ali dns record ls"
    ps1env alias +h "ali dns record help"
    local IFS
    local subcmd
    for subcmd in $(ali dns record _param_list_subcmd); do
        ps1env alias "+$subcmd" "ali dns record $subcmd"
    done

    ali dns record ls "$@"
}
