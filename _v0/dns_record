# shellcheck shell=sh disable=SC3043

ali_dns_record(){
    param <<A
subcommand:
    put         "put record"
    add         "add record"
    get         "get record"
    id          "add record"
    list|ls     "list all records"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_dns_record help
        return 1
    fi

    ali_dns_record_"$PARAM_SUBCMD" "$@"

}


ali_dns_record_add(){
    local DomainName=${1:?"Domain Name. If you want to setup 'xxx.domain.com', please input 'domain.com'"}
    local RR=${2:?"Provide RR. If you want to setup 'xxx.domain.com', please input 'xxx'"}
    local Type=${3:?"Provide Type: A"}
    local Value=${4:?"Provide IP"}

    aliyun alidns AddDomainRecord \
        --DomainName "$DomainName" \
        --RR "$RR" \
        --Type "$Type" \
        --Value "$Value"
}

ali_dns_record_id(){
    aliyun alidns DescribeDomainRecords \
        --DomainName "$1" \
        --RRKeyWord "$2" | \
    jq -r '.DomainRecords.Record[].RecordId'
}

ali_dns_record_get(){
    aliyun alidns DescribeDomainRecords \
        --DomainName "$1" \
        --RRKeyWord "$2" | \
    jq -r '.DomainRecords.Record[]'
}

ali_dns_record_ls(){
    if [ ! -t 1 ]; then
        _ali_dns_record_ls "$@"
        return
    fi
    
    _ali_dns_record_ls "$@" \
        | ali_table_json \
            .RecordId .Status .DomainName .RR .Type .Value .Weight  # .Line .Locked
}


_ali_dns_record_ls(){
    case $# in
        0)  ali dns domain ls | jq -r .[].DomainName | while read -r line; do
                _ali_dns_record_ls "$line"
            done

            # If in tty, should be ui and interactive form. Otherwise, a json list
            ;;
        1)  local name=${1}
            local rr=${name%.*.*}
            local domain=${name#${rr}.}
            if [ "$rr" = "$name" ]; then
                aliyun alidns DescribeDomainRecords --DomainName "$name" | jq -r '.DomainRecords.Record'
            else
                _ali_dns_record_ls "$domain" "^$rr$"
            fi
            ;;
        *)  local regex="${2:-Provide regex pattern}"
            _ali_dns_record_ls "${1:?Provide domain name}" | jq -r "
                .[] | 
                if .RR | test(\"$regex\")      then .
                elif .Value | test(\"$regex\")      then .
                else empty end
            " | jq -s .
            ;;
    esac    
}

ali_dns_record_exact_id(){
    local s
    s="$(_ali_dns_record_ls "$@")"
    local len
    len="$(echo "$s" | jq ' . | length ')"
    case $len in
        0)  ali_log warn "No such ip found.";;
        1)  echo "$s" | jq -r .[0].RecordId
            return 0
            ;;
        *)  ali_log warn "Multiple ip found.";;
    esac
    return 1
}

ali_dns_record_id_exact(){
    aliyun alidns DescribeDomainRecords \
        --DomainName "$1" \
        --RRKeyWord "$2" | \
    jq -r ".DomainRecords.Record[] | select(.RR == \"$2\") | .RecordId"
}

ali_dns_record_get_exact(){
    aliyun alidns DescribeDomainRecords \
        --DomainName "$1" \
        --RRKeyWord "$2" | \
    jq ".DomainRecords.Record[] | select(.RR == \"$2\")"
}

ali_dns_record_update(){
    local RecordId=${1:?"Provide RecordId"}
    local RR=${2:?"Provide RR"}
    local Type=${3:?"Provide Type"}
    local Value=${4:?"Provide Work"}
    aliyun alidns UpdateDomainRecord \
        --RecordId "$RecordId" \
        --RR "$RR" \
        --Type "$Type" \
        --Value "$Value"
}

ali_dns_record_del(){
    if [ "$#" -eq 1 ]; then
        local name=${1}
        local rr=${name%.*.*}
        local domain=${name#${rr}.}
        ali_dns_record_del "$domain" "$rr"
    else
        local DomainName=${1:?"Domain Name"}
        local RR=${2:?"Provide RR"}
        local RID
        RID=$(ali_dns_record_id_exact "$DomainName" "$RR") && \
        if aliyun alidns DeleteDomainRecord --RecordId "$RID"; then
            ali_log info "ali_dns_record_del success."
        fi
    fi
    
}

ali_dns_record_put2(){
    if [ $# = 2 ]; then
        local name=${1}
        local rr=${name%.*.*}
        local domain=${name#${rr}.}

        local rec=${2}
        if ali_is_ip "$rec"; then
            ali_dns_record_put "$domain" "$rr" A "$rec"
        else
            :
            # TODO: Maybe using other method.
        fi
    fi
    return 1
}

ali_dns_record_put(){
    local DomainName=${1:?"Domain Name"}
    local RR=${2:?"Provide RR"}
    local Type=${3:?"Provide Type"}
    local Value=${4:?"Provide IP"}

    local item
    item="$(_ali_dns_record_ls "$DomainName" "^$RR$")"
    local len
    len="$(echo "$item" | jq '. | length')"

    if [ "$len" -eq 0 ]; then
        ali_log info "Add New Record\n: $DomainName $RR $Type $Value"
        ali_dns_record_add "$DomainName" "$RR" "$Type" "$Value"
    elif [ "$len" -eq 1 ]; then
        local v
        v=$(printf "%s" "$item" | jq -r .[0].Value)
        if [ "$Value" = "$v" ]; then
            ali_log warn "Item already existed."
        else
            RID=$(printf "%s" "$item" | jq -r .[0].RecordId)
            ali_log info "Already Register. Try to update: $RID $RR $Type $Value"
            ali_dns_record_update "$RID" "$RR" "$Type" "$Value"
        fi
    else
        ali_log error "Found More than 1 item."
        return 1
    fi
}



