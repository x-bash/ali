# shellcheck shell=sh disable=SC3043


. ./_v0/vpc_switch

ali_vpc(){
    param <<A
subcommand:
    ls                  "list"
    create              "create"
    quick               "quick"
    del                 "delete"
    modify              "start instance"
    attr                "stop instance"
    switch|sw           "Switcher management"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_vpc_quick "$@"
        return
    fi

    "ali_vpc_$PARAM_SUBCMD" "$@"
}


ali_vpc_ls(){
    if [ ! -t 1 ]; then
        _ali_vpc_ls "$@"
    else
        _ali_vpc_ls "$@" | ali_table_json cidr=.CidrBlock .VpcName .Status .VpcId .VRouterId .CreationTime
    fi
}

# shellcheck disable=SC2120
_ali_vpc_ls(){
    case "$#" in
        0)  aliyun ecs DescribeVpcs | jq .Vpcs.Vpc ;;
        1)  local regex="${1:-Provide regex pattern}"
            _ali_vpc_ls | jq "
                .[] | 
                if      .CidrBlock | test(\"$regex\")       then .
                elif    .VpcId | test(\"$regex\")           then .
                elif    .VpcName | test(\"$regex\")       then .
                else empty end
            " | jq -s .
            ;;
    esac 
}

ali_vpc_exact_id(){
    ali_vpc_exact "$@" | jq -r .VpcId
}


ali_vpc_exact(){
    local s
    s="$(_ali_vpc_ls "${1:-Provide regex}")"
    local len
    len="$(echo "$s" | jq ' . | length ')"
    case $len in
        0)  ali_log warn "No such vpc found.";;
        1)  echo "$s" | jq -r .[0]
            return 0
            ;;
        *)  ali_log warn "Multiple vpc found.";;
    esac
    return 1
}


ali_vpc_create(){
    param <<A
options:
    --name          "Provide name"      <name>=""
    --description   "Description"       <desc>="Create-by-x-cmd-ali-module"
    --cidr          "Subnet of 172.16.0.0/12, 10.0.0.0/8, 192.168.0.0/16"  
                                        <cidr>=""
A

    name="${name:-"xcmd-ali-v0-vpc-$(date +%y%m%d%H%m)"}"

    # 172.16.0.0/12
    # 10.0.0.0/8
    # 192.168.0.0/16
    eval aliyun ecs CreateVpc \
        ${name+--VpcName "$name"} \
        ${description+--Description "$description"} \
        ${cidr+--CidrBlock "$cidr"}
}

ali_vpc_del(){
    local id
    if id="$(ali_vpc_exact_id "$@")"; then
        ali_log info "Instance ID: $id"
        aliyun ecs DeleteVpc --VpcId "$id"
    fi
}


# shellcheck disable=SC2120
_ali_vpc_quick_title(){
    s=$(ali_vpc_ls "$@")
    printf "%s" "$s" | ali_table_json cidr=.CidrBlock .VpcName .Status .VpcId .VRouterId .CreationTime

    cat <<A

Commands:
    +|create      Format: create [ --name <vpc name> ] 
    -             Format: del <part of the vpc's name or id>
    r             reload
    q             quit
    :               : <cmd> [ ... <args> ]

A
}

ali_vpc_quick(){
    if [ ! -t 1 ]; then
        ali_vpc_ls "$@"
        return
    fi

    local s
    _ali_vpc_quick_title

    local line
    while printf "ali vpc> " && ali_read line; do
        eval set -- "$line"
        local cmd=$1;   shift
        case "$cmd" in
            +|create)    
                echo ali_vpc_create "$@"
                ali_vpc_create "$@"
                _ali_vpc_quick_title
                ;;
            -|del)
                ali_vpc_del "$@"
                _ali_vpc_quick_title
                ;;
            r)  
                _ali_vpc_quick_title
                ;;
            q)  printf "\n"
                return 
                ;;
            :*) eval "$@"
                ;;
            *)  ali vpc "$@"
        esac
    done
    printf "\n"
}
