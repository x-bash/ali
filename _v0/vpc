# shellcheck shell=sh disable=SC3043


. ./_v0/vpc_switch

ali_vpc(){
    param <<A
subcommand:
    ls                  "list"
    create              "create"
    quick               "quick"
    del                 "delete"
    modify              "start instance"
    attr                "stop instance"
    switch|sw           "Switcher management"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_vpc_quick "$@"
        return
    fi

    "ali_vpc_$PARAM_SUBCMD" "$@"
}


ali_vpc_ls_format(){
    ali_table_json cidr=.CidrBlock .VpcName .Status .VpcId .VRouterId .CreationTime
}

ali_vpc_ls(){
    if [ ! -t 1 ]; then
        _ali_vpc_ls "$@"
    else
        _ali_vpc_ls "$@" | ali_vpc_ls_format
    fi
}

# shellcheck disable=SC2120
_ali_vpc_ls(){
    case "$#" in
        0)  aliyun ecs DescribeVpcs | jq .Vpcs.Vpc ;;
        1)  local regex="${1:-Provide regex pattern}"
            _ali_vpc_ls | jq "
                .[] | 
                if      .CidrBlock | test(\"$regex\")       then .
                elif    .VpcId | test(\"$regex\")           then .
                elif    .VpcName | test(\"$regex\")       then .
                else empty end
            " | jq -s .
            ;;
    esac 
}

ali_vpc_exact_id(){
    ali_vpc_exact "$@" | jq -r .VpcId
}


ali_vpc_exact(){
    local s
    s="$(_ali_vpc_ls "${1:-Provide regex}")"
    local len
    len="$(echo "$s" | jq ' . | length ')"
    case $len in
        0)  ali_log warn "No such vpc found.";;
        1)  echo "$s" | jq -r .[0]
            return 0
            ;;
        *)  ali_log warn "Multiple vpc found.";;
    esac
    return 1
}


ali_vpc_create(){
    param <<A
options:
    --name          "Provide name"      <name>=""
    --description   "Description"       <desc>="Create-by-x-cmd-ali-module"
    --cidr          "Subnet of 172.16.0.0/12, 10.0.0.0/8, 192.168.0.0/16"  
                                        <cidr>=""
A

    name="${name:-"xcmd-ali-v0-vpc-$(date +%y%m%d%H%m)"}"

    # 172.16.0.0/12
    # 10.0.0.0/8
    # 192.168.0.0/16
    eval aliyun ecs CreateVpc \
        ${name+--VpcName "$name"} \
        ${description+--Description "$description"} \
        ${cidr+--CidrBlock "$cidr"}
}

ali_vpc_del(){
    local id
    if id="$(ali_vpc_exact_id "$@")"; then
        ali_log info "Instance ID: $id"
        aliyun ecs DeleteVpc --VpcId "$id"
    fi
}

ali_vpc_quick(){
    local prompt
    prompt="
\033[1;33mali vpc >\033[0m "

    ali_quicker "ali_vpc" \
        "${prompt}"\
        "create|del" "$@"
}

