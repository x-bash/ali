# shellcheck shell=sh disable=SC3043


# https://help.aliyun.com/document_detail/25553.html?spm=a2c4g.11186623.6.1551.67ff7b6fhY3woe

. ./_v0/sg_rule

ali_sg(){
    param <<A
subcommand:
    create|+        "create security group"
    del|-           "delete security group"
    ls              "list security group"
    include         "join an ec instance"
    exclude         "exclude an ec instance"
    refer           "list reference"
    rule            "sg rule managment"
A

    if [ -z "$PARAM_SUBCMD" ]; then
        ali_sg_quick "$@"
        return
    fi

    "ali_sg_$PARAM_SUBCMD" "$@"
}


ali_sg_create(){
    param <<A
options:
    --name                      "Default is a auto generated name"          <name>=""
    --type                      "Default is normal"                         <type>=normal               =   normal     enterprise
    --desc|--description        "Provide description"                       <description-string>=""
A

    eval aliyun ecs CreateSecurityGroup \
        ${name+--SecurityGroupName "$name"} \
        --SecurityGroupType "${type}" \
        ${name+--Description "$desc"}

}

# shellcheck disable=SC2120
ali_sg_ls(){
    if [ ! -t 1 ]; then
        _ali_sg_ls "$@"
    else
        _ali_sg_ls "$@" | ali_table_json .CreationTime .SecurityGroupId .SecurityGroupName .SecurityGroupType
    fi
}

_ali_sg_ls(){
    case $# in
        0)  aliyun ecs DescribeSecurityGroups | jq .SecurityGroups.SecurityGroup
            ;;
        *)  local regex="${1:-Provide regex pattern}"
            ali_sg_ls | jq "
                .[] | 
                if .SecurityGroupName | test(\"$regex\")      then .
                elif .SecurityGroupId | test(\"$regex\")      then .
                else empty end
            " | jq -s .
            ;;
    esac
}

ali_sg_exact_id(){
    local s
    s="$(ali_sg_ls "${1:-Provide ip}")"
    local len
    len="$(echo "$s" | jq ' . | length ')"
    case $len in
        0)  ali_log warn "No such security group found.";;
        1)  echo "$s" | jq -r .[0].SecurityGroupId
            return 0
            ;;
        *)  ali_log warn "Multiple security group found.";;
    esac
    return 1
}



ali_sg_del(){
    local id
    if id="$(ali_sg_exact_id "$@")"; then
        ali_log info "SecurityGroup ID: $id"
        aliyun ecs DeleteSecurityGroup  --SecurityGroupId "$id"
    fi
}


ali_sg_refer(){
    if [ ! -t 1 ]; then
        _ali_sg_refer "$@"
    else
        local s
        if s="$(_ali_sg_refer "$@")"; then
            ali_table_json .a .b <<A
$s
A
        fi
    fi
}

_ali_sg_refer(){
    local id
    if id="$(ali_sg_exact_id "$@")"; then
        ali_log info "SecurityGroup ID: $id"
        aliyun ecs DescribeSecurityGroupReferences  --SecurityGroupId.1 "$id" | jq .SecurityGroupReferences.SecurityGroupReference
        return 0
    fi
    return 1
}

ali_sg_include(){
    local id
    if ! id="$(ali_sg_exact_id "$1")"; then
        return
    fi

    shift

    local ecid
    if ! ecid="$(ali_ec_exactid "$1")"; then
        return
    fi
    aliyun ecs JoinSecurityGroup --SecurityGroupId "$id" --InstanceId "$ecid"
}

ali_sg_exclude(){
local id
    if ! id="$(ali_sg_exact_id "$1")"; then
        return
    fi

    shift

    local ecid
    if ! ecid="$(ali_ec_exactid "$1")"; then
        return
    fi
    aliyun ecs LeaveSecurityGroup --SecurityGroupId "$id" --InstanceId "$ecid"
}


ali_sg_quick(){
    case "$1" in
        +*) ali_sg_allocate "${1#+}"  
            ;;
        :*) ali_sg_del "${1#:}"
            ;;
        *)   
            ali_sg_ls "$@"
            ;;
    esac
}


